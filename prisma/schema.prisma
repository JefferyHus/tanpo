generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_POSTGRES_URL")
}

model User {
  id        String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email     String    @unique
  password  String
  name      String?
  roleId    String?   @db.Uuid
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  role    Role?    @relation(fields: [roleId], references: [id])
  profile Profile?

  @@map("user")
}

model Role {
  id        String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  users       User[]
  permissions Permission[]

  @@map("role")
}

model Permission {
  id        String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  roles Role[]

  @@map("permission")
}

model Profile {
  id        String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId    String    @unique @db.Uuid
  firstName String?
  lastName  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  user User @relation(fields: [userId], references: [id])

  @@map("profile")
}
